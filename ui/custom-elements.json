{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/config.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultConfig",
          "type": {
            "text": "ProfilesConfig"
          },
          "default": "{\n  avatarMode: 'avatar-optional',\n  additionalFields: [],\n  minNicknameLength: 3,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultConfig",
          "declaration": {
            "name": "defaultConfig",
            "module": "src/config.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "profilesStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profilesStoreContext",
          "declaration": {
            "name": "profilesStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./types\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./context\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./profiles-client\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./profiles-store\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./config\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "demoProfiles",
          "return": {
            "type": {
              "text": "AgentPubKeyMap<Record>"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesZomeMock",
          "members": [
            {
              "kind": "method",
              "name": "create_profile",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_profile",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_agents",
              "parameters": [
                {
                  "name": "nickname_filter",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agent_profile",
              "parameters": [
                {
                  "name": "agent_address",
                  "type": {
                    "text": "AgentPubKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agents_with_profile"
            }
          ],
          "superclass": {
            "name": "ZomeMock",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "demoProfiles",
          "declaration": {
            "name": "demoProfiles",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProfilesZomeMock",
          "declaration": {
            "name": "ProfilesZomeMock",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesClient",
          "members": [
            {
              "kind": "method",
              "name": "getAgentProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKey"
                  },
                  "description": "the agent to get the profile for"
                }
              ],
              "description": "Get the profile for the given agent, if they have created it"
            },
            {
              "kind": "method",
              "name": "searchAgents",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "nicknameFilter",
                  "type": {
                    "text": "string"
                  },
                  "description": "must be of at least 3 characters"
                }
              ],
              "description": "Search profiles that start with nicknameFilter"
            },
            {
              "kind": "method",
              "name": "getAgentsWithProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get all the agents in the DHT that have created a profile"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "the profile to create"
                }
              ],
              "description": "Create my profile"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "the profile to create"
                }
              ],
              "description": "Update my profile"
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesClient",
          "declaration": {
            "name": "ProfilesClient",
            "module": "src/profiles-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesStore",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ProfilesConfig"
              },
              "default": "{ ...defaultConfig, ...config }"
            },
            {
              "kind": "field",
              "name": "agentsWithProfile",
              "description": "Fetches all the agents that have created a profile in the DHT"
            },
            {
              "kind": "field",
              "name": "allProfiles",
              "description": "Fetches the profiles for all agents in the DHT\n\nThis will get slower as the number of agents in the DHT increases"
            },
            {
              "kind": "field",
              "name": "profiles",
              "default": "new LazyHoloHashMap((agent: AgentPubKey) =>\n    asyncReadable<Profile | undefined>(async (set) => {\n      const profile = await this.client.getAgentProfile(agent);\n      set(profile);\n\n      return this.client.onSignal((signal) => {\n        if (this.client.client.myPubKey.toString() !== agent.toString()) return;\n        if (!(signal.type === \"EntryCreated\" || signal.type === \"EntryUpdated\"))\n          return;\n        set(signal.app_entry);\n      });\n    })\n  )"
            },
            {
              "kind": "field",
              "name": "myProfile"
            },
            {
              "kind": "method",
              "name": "agentsProfiles",
              "return": {
                "type": {
                  "text": "AsyncReadable<ReadonlyMap<AgentPubKey, Profile | undefined>>"
                }
              },
              "parameters": [
                {
                  "name": "agents",
                  "type": {
                    "text": "Array<AgentPubKey>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "searchProfiles",
              "return": {
                "type": {
                  "text": "AsyncReadable<ReadonlyMap<AgentPubKey, Profile>>"
                }
              },
              "parameters": [
                {
                  "name": "searchFilter",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesStore",
          "declaration": {
            "name": "ProfilesStore",
            "module": "src/profiles-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/agent-avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AgentAvatar",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "copyOnClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Copy AgentPubKey to clipboard on click",
              "attribute": "copyOnClick"
            },
            {
              "kind": "field",
              "name": "showOnHover",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show tooltip on hover with truncated AgentPubKey",
              "attribute": "showOnHover"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "renderIdenticon"
            },
            {
              "kind": "field",
              "name": "justCopiedHash",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "copyHash"
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "fieldName": "agentPubKey"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "fieldName": "size"
            },
            {
              "name": "copyOnClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Copy AgentPubKey to clipboard on click",
              "fieldName": "copyOnClick"
            },
            {
              "name": "showOnHover",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show tooltip on hover with truncated AgentPubKey",
              "fieldName": "showOnHover"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "agent-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AgentAvatar",
          "declaration": {
            "name": "AgentAvatar",
            "module": "src/elements/agent-avatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "agent-avatar",
          "declaration": {
            "name": "AgentAvatar",
            "module": "src/elements/agent-avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A custom element that fires event on value change.",
          "name": "CreateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ],
              "description": "Private properties"
            }
          ],
          "events": [
            {
              "name": "profile-created",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateProfile",
          "declaration": {
            "name": "CreateProfile",
            "module": "src/elements/create-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-profile",
          "declaration": {
            "name": "CreateProfile",
            "module": "src/elements/create-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditProfile",
          "members": [
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "Profile | undefined"
              },
              "description": "The profile to be edited.",
              "attribute": "profile"
            },
            {
              "kind": "field",
              "name": "saveProfileLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "attribute": "save-profile-label"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "allowCancel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "allow-cancel"
            },
            {
              "kind": "method",
              "name": "avatarMode",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "fireSaveProfile",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "Record<string, string>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireCancel"
            },
            {
              "kind": "method",
              "name": "renderField",
              "parameters": [
                {
                  "name": "fieldConfig",
                  "type": {
                    "text": "FieldConfig"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "save-profile",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the save profile button is clicked"
            },
            {
              "name": "cancel-edit-profile",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "profile",
              "type": {
                "text": "Profile | undefined"
              },
              "description": "The profile to be edited.",
              "fieldName": "profile"
            },
            {
              "name": "save-profile-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "fieldName": "saveProfileLabel"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            },
            {
              "name": "allow-cancel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "allowCancel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditProfile",
          "declaration": {
            "name": "EditProfile",
            "module": "src/elements/edit-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-profile",
          "declaration": {
            "name": "EditProfile",
            "module": "src/elements/edit-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/list-profiles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ListProfiles",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "initials",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "nickname",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireAgentSelected",
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "ReadonlyMap<AgentPubKey, Profile>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects an agent from the list. Detail will have this shape: { agentPubKey: <AGENT_PUB_KEY as Uint8Array> }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "list-profiles",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListProfiles",
          "declaration": {
            "name": "ListProfiles",
            "module": "src/elements/list-profiles.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "list-profiles",
          "declaration": {
            "name": "ListProfiles",
            "module": "src/elements/list-profiles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/my-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyProfile",
          "declaration": {
            "name": "MyProfile",
            "module": "src/elements/my-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "my-profile",
          "declaration": {
            "name": "MyProfile",
            "module": "src/elements/my-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileDetail",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "getAdditionalFields",
              "return": {
                "type": {
                  "text": "Record<string, string>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAdditionalField",
              "parameters": [
                {
                  "name": "fieldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "fieldValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "fieldName": "agentPubKey"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileDetail",
          "declaration": {
            "name": "ProfileDetail",
            "module": "src/elements/profile-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-detail",
          "declaration": {
            "name": "ProfileDetail",
            "module": "src/elements/profile-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-list-item-skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileListItemSkeleton",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-list-item-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileListItemSkeleton",
          "declaration": {
            "name": "ProfileListItemSkeleton",
            "module": "src/elements/profile-list-item-skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-list-item-skeleton",
          "declaration": {
            "name": "ProfileListItemSkeleton",
            "module": "src/elements/profile-list-item-skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-prompt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilePrompt",
          "slots": [
            {
              "description": "Will be displayed above the create-profile form when the user is prompted with it",
              "name": "hero"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "renderPrompt",
              "parameters": [
                {
                  "name": "myProfile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-prompt",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilePrompt",
          "declaration": {
            "name": "ProfilePrompt",
            "module": "src/elements/profile-prompt.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-prompt",
          "declaration": {
            "name": "ProfilePrompt",
            "module": "src/elements/profile-prompt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profiles-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profiles-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesContext",
          "declaration": {
            "name": "ProfilesContext",
            "module": "src/elements/profiles-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profiles-context",
          "declaration": {
            "name": "ProfilesContext",
            "module": "src/elements/profiles-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/search-agent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchAgent",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "clearOnSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "attribute": "clear-on-select"
            },
            {
              "kind": "field",
              "name": "includeMyself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "attribute": "include-myself"
            },
            {
              "kind": "field",
              "name": "fieldLabel",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "attribute": "field-label"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "onFilterChange"
            },
            {
              "kind": "method",
              "name": "onUsernameSelected",
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAgentList"
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects some agent. Detail will have this shape: { agentPubKey: HoloHash }"
            }
          ],
          "attributes": [
            {
              "name": "clear-on-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "fieldName": "clearOnSelect",
              "attribute": "clear-on-select"
            },
            {
              "name": "include-myself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "fieldName": "includeMyself",
              "attribute": "include-myself"
            },
            {
              "name": "field-label",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "fieldName": "fieldLabel",
              "attribute": "field-label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "fieldName": "name"
            },
            {
              "name": "defaultValue",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "fieldName": "disabled"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "search-agent",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchAgent",
          "declaration": {
            "name": "SearchAgent",
            "module": "src/elements/search-agent.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "search-agent",
          "declaration": {
            "name": "SearchAgent",
            "module": "src/elements/search-agent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/update-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "UpdateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "profile-updated",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "update-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UpdateProfile",
          "declaration": {
            "name": "UpdateProfile",
            "module": "src/elements/update-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "update-profile",
          "declaration": {
            "name": "UpdateProfile",
            "module": "src/elements/update-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getAppWebsocket"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAppWebsocket",
          "declaration": {
            "name": "getAppWebsocket",
            "module": "test/mocks/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/profiles.mock.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesMock",
          "members": [
            {
              "kind": "method",
              "name": "create_profile",
              "parameters": [
                {
                  "name": "{ username }"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_profiles",
              "parameters": [
                {
                  "name": "{ username_prefix }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_my_profile",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agent_profile",
              "parameters": [
                {
                  "name": "{ agent_address }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "findAgent",
              "parameters": [
                {
                  "name": "agent_address"
                }
              ]
            },
            {
              "kind": "field",
              "name": "agents",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesMock",
          "declaration": {
            "name": "ProfilesMock",
            "module": "test/mocks/profiles.mock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/utils/image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeAndExport",
          "parameters": [
            {
              "name": "img",
              "type": {
                "text": "HTMLImageElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeAndExport",
          "declaration": {
            "name": "resizeAndExport",
            "module": "src/elements/utils/image.ts"
          }
        }
      ]
    }
  ]
}
