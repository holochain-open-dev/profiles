name: "build-and-cache"
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push: 
    branches: [ main, develop, nixify ]
  pull_request: 
    branches: [ main ]

jobs:
  build-and-cache:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v14
        with:
          name: holochain-open-dev

      - name: Install and test
        run: |
          nix develop --no-update-lock-file --accept-flake-config --command bash -c "npm i && npm t && npm run build -w ui"


      - name: Build debug zomes
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#profiles_integrity
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles_integrity | nix run nixpkgs#jq -- -r '.[].path')
          cachix pin holochain-open-dev profiles_integrity_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles_integrity | nix run nixpkgs#jq -- -r '.[].path')

          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#profiles
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles | nix run nixpkgs#jq -- -r '.[].path')
          cachix pin holochain-open-dev profiles_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles | nix run nixpkgs#jq -- -r '.[].path')

      - name: Build release zomes
        if: matrix.os == 'ubuntu-latest'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#profiles_integrity.meta.release
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles_integrity.meta.release | nix run nixpkgs#jq -- -r '.[].path')
          cachix pin holochain-open-dev profiles_integrity $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles_integrity.meta.release | nix run nixpkgs#jq -- -r '.[].path')

          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#profiles.meta.release
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles.meta.release | nix run nixpkgs#jq -- -r '.[].path')
          cachix pin holochain-open-dev profiles $(nix path-info --json --accept-flake-config --no-warn-dirty .#profiles.meta.release | nix run nixpkgs#jq -- -r '.[].path')
